plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.beloushkin.learn'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sourceSets.main.java.srcDirs "src/generated-sources/java"
sourceSets.main.resources.excludes = ['user.xsd']

configurations {
    jaxb
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.jvnet.mimepull:mimepull:1.9.11'
    implementation 'wsdl4j:wsdl4j:1.6.3'

    jaxb (
            'com.sun.xml.bind:jaxb-xjc:2.3.1',
            'com.sun.xml.bind:jaxb-impl:2.3.1',
            'org.glassfish.jaxb:jaxb-runtime:2.3.2'
    )

    compileOnly 'javax.xml.bind:jaxb-api:2.3.1'
    compileOnly 'javax.activation:activation:1.1'
    compileOnly 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task jaxb {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/generated-sources/java")
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'com.beloushkin.learn.jaxb',
                schema: 'src/main/resources/xsd/user.xsd'
        )
    }
}
compileJava.dependsOn jaxb

test {
    useJUnitPlatform()
}
